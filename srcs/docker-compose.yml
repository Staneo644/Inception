version: "3.9"

services:
  mariadb:
    container_name:
      mariadb

    build:
      context: requirements/mariadb
      dockerfile : Dockerfile
      args :
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - MYSQL_USER=${MYSQL_USER_FOR_WORDPRESS}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD_FOR_WORDPRESS}
    restart: unless-stopped
    
    networks:
      - inception
    volumes:
      - "mariadb_vol:${MYSQL_VOLUME}"


  wordpress:
    container_name:
      wordpress
    depends_on:
      - mariadb

    environment:
      DOMAIN: ${DOMAIN_NAME}
      DATABASE: ${MYSQL_DATABASE}
      SITE: ${SITE_NAME}
      SQL_HOST: ${MYSQL_HOST}
      SQL_USER: ${MYSQL_USER_FOR_WORDPRESS}
      SQL_PASS: ${MYSQL_PASSWORD_FOR_WORDPRESS}

      USER_NAME: ${WORDPRESS_MICHEL_USER}
      USER_PASS: ${WORDPRESS_MICHEL_PASSWORD}
      USER_MAIL: ${WORDPRESS_MICHEL_MAIL}

      ROOT_PASS: ${WORDPRESS_ROOT_PASSWORD}
      ROOT_NAME: ${WORDPRESS_ROOT_USER}
      ROOT_MAIL: ${WORDPRESS_ROOT_MAIL}

    build:
      context: requirements/wordpress
      dockerfile: Dockerfile
      args:
        VOLUME: ${WORDPRESS_VOLUME}

    restart: unless-stopped
    networks: 
      - inception
    volumes:
      - "wordpress_vol:${WORDPRESS_VOLUME}"


  nginx:
    container_name: nginx
    depends_on:
      - wordpress
    ports:
      - "443:443"
    build:
      context: requirements/nginx
      dockerfile: Dockerfile
    restart: unless-stopped
    networks: 
      - inception
    volumes:
      - "wordpress_vol:${NGINX_VOLUME}"



volumes:
  wordpress_vol:
    driver: local
    driver_opts:
      type: none
      device: /home/ajossera/data/wordpress
      o: bind
  mariadb_vol:
    driver: local
    driver_opts:
      type: none
      device: /home/ajossera/data/mariadb
      o: bind


networks:
  inception:
    driver: bridge